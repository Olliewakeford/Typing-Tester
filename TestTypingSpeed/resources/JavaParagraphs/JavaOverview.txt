Java is a strongly typed language where a type declaration specifies a class or a primitive type. Everything in Java is a class and there are no global variables or functions, although we can view static methods and fields as global elements. We can place curly braces in the class body as an initialiser which is executed when an instance is created and used for initialisation of anonymous inner classes. If we use the keyword ‘static’ before the curly braces, this forms a static initialiser which is executed during class loading to the virtual machine. This can only access static elements of the class and have to terminate without an exception. Normal initialisers can only throw exceptions defined in constructors and initialisers of anonymous inner classes can throw any exception.